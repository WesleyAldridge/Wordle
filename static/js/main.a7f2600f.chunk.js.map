{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","ResetButton","id","React","Component","Board","state","squares","Array","fill","xIsNext","gameOver","winner","i","this","handleClick","resetBoard","slice","lines","length","a","b","c","console","log","String","setState","status","renderSquare","renderResetButton","Game","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7f2600f.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// class Square extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <button \r\n//         className=\"square\" \r\n//         onClick={ () => this.props.onClick() }\r\n//       >\r\n//         { this.props.value }\r\n//       </button>\r\n//     );\r\n//   }\r\n// }\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass ResetButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        id=\"reset-button\"\r\n        onClick={ () => this.props.onClick() }\r\n      >\r\n        Reset Board\r\n      </button>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array(9).fill(null), \r\n      xIsNext: true,\r\n      gameOver: false,\r\n      winner: null,\r\n    };\r\n  }\r\n\r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value={this.state.squares[i]}\r\n        onClick={() => {this.handleClick(i)} }\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResetButton() {\r\n    return (\r\n      <ResetButton \r\n        onClick = { () => {this.resetBoard()} }\r\n      />\r\n    );\r\n  }\r\n\r\n  winner(i) {\r\n    // check down vertical, up vertical\r\n    // left horizontal, right horizontal\r\n    // down diagonal right, down diagonal left\r\n    // up diagonal right, up diagonal left\r\n    let winner = false;\r\n    const squares = this.state.squares.slice();\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for(let i = 0; i < lines.length; i++) {\r\n      const[a,b,c] = lines[i];\r\n      if(squares[a] && \r\n         squares[a] === squares[b] &&\r\n         squares[b] === squares[c]){\r\n          console.log('winner found : ' + this.state.xIsNext ? 'X' : 'O');\r\n          winner = true;\r\n      } \r\n      //else console.log('winner not found at ' +\r\n      //String(lines[i][0]) + ', ' + String(lines[i][1]) +\r\n     // ', ' + String(lines[i][0]) );\r\n    }\r\n\r\n    if (winner) return [true, this.state.xIsNext ? 'X' : 'O'];\r\n    else return [false, 'X'];\r\n  }\r\n\r\n  handleClick(i) {\r\n    const squares = this.state.squares.slice();\r\n    if(squares[i] != null) return;\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    let winner = this.winner(i);\r\n    console.log('winner[0,1]: ' + String(winner[0]) + ' ' + String(winner[1]) );\r\n    this.setState({\r\n        xIsNext: !this.state.xIsNext,\r\n        squares: squares,\r\n        gameOver: winner[0],\r\n        winner: winner[0] ? winner[1] : null,\r\n    });\r\n  }\r\n\r\n  resetBoard () {\r\n    const squares = this.state.squares.slice();\r\n    for(let i = 0; i < squares.length; i++)\r\n      squares[i] = null;\r\n    this.setState({\r\n      xIsNext: true,\r\n      squares: squares,\r\n      gameOver: false,\r\n      winner: null,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const status = 'Next player: ' +\r\n                   (this.state.xIsNext ? 'X' : 'O');\r\n    \r\n    const winner = (this.state.gameOver ? 'Winner is: ' + \r\n    this.state.winner +'!!!!' : '');\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"status\">{winner}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n        {this.renderResetButton()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}